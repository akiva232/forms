{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/name-editor/name-editor.component.ts","webpack:///src/app/name-editor/name-editor.component.html","webpack:///src/app/profile-editor/profile-editor.component.ts","webpack:///src/app/profile-editor/profile-editor.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","NameEditorComponent","name","setValue","updateName","value","ProfileEditorComponent","fb","profileForm","group","firstName","required","lastName","address","street","city","state","zip","console","log","patchValue","onSubmit","updateProfile","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'formsWithValdesia2';\n}\n","<app-name-editor></app-name-editor>\r\n<br><br><br>\r\n<br><br>\r\n\r\n<app-profile-editor></app-profile-editor>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NameEditorComponent } from './name-editor/name-editor.component';\nimport { ProfileEditorComponent } from './profile-editor/profile-editor.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NameEditorComponent,\n    ProfileEditorComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-name-editor',\n  templateUrl: './name-editor.component.html',\n  styleUrls: ['./name-editor.component.css']\n})\nexport class NameEditorComponent implements OnInit {\n\n  name=new FormControl('');\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n  // שהכפתור יחליף את מה שכתוב\n  updateName(){\n    this.name.setValue('Nacy')\n    }\n\n}\n","<label>\n    name:\n    <input type=\"text\" [formControl]=\"name\">\n</label>\n\n<br><br>\n\n<p>\n    value: {{name.value}}\n</p>\n\n\n<p>\n    <button (click)=\"updateName()\">Updet Name</button>\n</p>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder,Validators,FormArray  } from '@angular/forms';\n\n// FormBuilder חוסך בשביל לא לכתוב את כל הפרום גרןפ/קונטרול\n@Component({\n  selector: 'app-profile-editor',\n  templateUrl: './profile-editor.component.html',\n  styleUrls: ['./profile-editor.component.css']\n})\nexport class ProfileEditorComponent implements OnInit {\n// צורה רגילה מופעים\n// profileForm= new FormGroup ({\n//   firstName: new FormControl(''),\n//   lastName: new FormControl(''),\n//   // FormGroup  אפשר להכניס עוד קבוצה של \n//   address:new FormGroup({\n//     street:new FormControl(''),\n//     city:new FormControl(''),\n//     state:new FormControl(''),\n//     zip:new FormControl(''),\n//   })\n\n//  (בניית פרופילים) חוסך זמן\nprofileForm = this.fb.group({\n  // זה נקרא ולידטור יכולת הגבלה וטופס נכון\n  firstName: ['',Validators.required],\n  lastName: [''],\n  address: this.fb.group({\n    street: [''],\n    city: [''],\n    state: [''],\n    zip: ['']\n  }),\n  // // FormArray מופעים של קבוצות\n  // aliases:this.fb.array([\n  //   this.fb.control('')\n  // ])\n})\n\n  constructor(private fb:  FormBuilder) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(){\n    console.log(this.profileForm.value)\n  }\n\n  //   איפוס ערך תיקון או עידכון\n  updateProfile(){\n    this.profileForm.patchValue({\n      firstName:'Nancy',\n      address:{\n        street:'123 Drew Street'\n      }\n      \n    });\n  // }\n  // // הפונקציה של מופעים בקבוצות\n  // get aliases(){\n  //   return this.profileForm.get(' aliases') as FormArray;\n  // }\n  // // להכניס למערך שבנינו במופע\n  // addAlias() {\n  //   this.aliases.push(this.fb.control(''));\n  // }\n}}\n","<!-- ngSubmit ליצור כפתור שיאזין לי -->\n<form [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit()\">\n    <label>\n        First Name:\n        <input type=\"text\" formControlName=\"firstName\" required>\n    </label>\n\n    <br><br>\n\n    <label>\n        Last Name:\n        <input type=\"text\" formControlName=\"lastName\">\n    </label>\n\n    <br><br>\n    <!-- התוספת שהוספנו בתוך הקודם -->\n    <div formGroupName=\"address\">\n        <h3>Address</h3>\n        <label>\n            Street:\n            <input type=\"text\" formControlName=\"street\">\n        </label>\n        <br><br>\n        <label>\n            City:\n            <input type=\"text\" formControlName=\"city\">\n        </label>\n        <br><br>\n        <label>\n            State:\n            <input type=\"text\" formControlName=\"state\">\n        </label>\n        <br><br>\n        <label>\n            Zip:\n            <input type=\"text\" formControlName=\"zip\">\n        </label>\n        <br><br>\n    </div>\n\n    <br><br>\n    <button type=\"submit\" [disabled]=\"!profileForm.valid\">Sumbit</button>\n\n\n    \n\n    \n    <br><br>\n    <p>\n        Form Status: {{profileForm.status}}\n    </p>\n\n    <br><br>\n    <button (click)=\"updateProfile()\">Update Profile</button>\n\n\n\n   \n\n</form>\n\n\n  <!-- צריך לבדוק מה הבעיה במערך... בפרום כונטרול -->\n        <!-- <div *ngFor=\"let alias of aliases.controls; let i=index\"> -->\n          <!-- The repeated alias template -->\n          <!-- <label>\n            Alias:\n            <input type=\"text\" [formControlName]=\"\">\n          </label>\n        </div>\n      </div> -->\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}